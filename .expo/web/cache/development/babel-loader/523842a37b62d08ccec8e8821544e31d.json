{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport React, { useEffect, useState } from 'react';\nimport CategoryCard from \"./CategoryCard\";\nimport sanity, { urlFor } from \"../sanity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Categories = function Categories() {\n  var _React$useState = React.useState([]),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    categories = _React$useState2[0],\n    setCategories = _React$useState2[1];\n  React.useEffect(function () {\n    sanity.fetch(\"*[_type == \\\"category\\\"]\").then(function (data) {\n      setCategories(data);\n    });\n  }, []);\n  return _jsx(ScrollView, {\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    contentContainerStyle: {\n      paddingHorizontal: 15,\n      paddingTop: 10\n    },\n    children: categories.map(function (category) {\n      return _jsx(CategoryCard, {\n        imgUrl: urlFor(category.image).width(200).url(),\n        title: category.name\n      }, category._id);\n    })\n  });\n};\nexport default Categories;","map":{"version":3,"names":["React","useEffect","useState","CategoryCard","sanity","urlFor","Categories","categories","setCategories","fetch","then","data","paddingHorizontal","paddingTop","map","category","image","width","url","name","_id"],"sources":["D:/repos/Deliveroo/components/Categories.js"],"sourcesContent":["import { View, Text, ScrollView } from 'react-native'\nimport React, { useEffect, useState } from 'react'\nimport CategoryCard from './CategoryCard'\nimport sanity, { urlFor } from '../sanity'\n\nconst Categories = () => {\n    const [categories, setCategories] = React.useState([])\n\n    React.useEffect(() => {\n        sanity.fetch(\n            `*[_type == \"category\"]`\n        ).then((data) => {\n            setCategories(data)\n        })\n    }, [])\n\n\n    return (\n        <ScrollView horizontal showsHorizontalScrollIndicator={false}\n            contentContainerStyle={{ paddingHorizontal: 15, paddingTop: 10 }}>\n\n            {/* Category Card */}\n            {categories.map((category) => (\n                <CategoryCard\n                    key={category._id}\n                    imgUrl={urlFor(category.image).width(200).url()}\n                    title={category.name}\n                />\n            ))}\n\n\n        </ScrollView>\n    )\n}\n\nexport default Categories"],"mappings":";;;;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,YAAY;AACnB,OAAOC,MAAM,IAAIC,MAAM;AAAmB;AAE1C,IAAMC,UAAU,GAAG,SAAbA,UAAU,GAAS;EACrB,sBAAoCN,KAAK,CAACE,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/CK,UAAU;IAAEC,aAAa;EAEhCR,KAAK,CAACC,SAAS,CAAC,YAAM;IAClBG,MAAM,CAACK,KAAK,4BAEX,CAACC,IAAI,CAAC,UAACC,IAAI,EAAK;MACbH,aAAa,CAACG,IAAI,CAAC;IACvB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAGN,OACI,KAAC,UAAU;IAAC,UAAU;IAAC,8BAA8B,EAAE,KAAM;IACzD,qBAAqB,EAAE;MAAEC,iBAAiB,EAAE,EAAE;MAAEC,UAAU,EAAE;IAAG,CAAE;IAAA,UAGhEN,UAAU,CAACO,GAAG,CAAC,UAACC,QAAQ;MAAA,OACrB,KAAC,YAAY;QAET,MAAM,EAAEV,MAAM,CAACU,QAAQ,CAACC,KAAK,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,EAAG;QAChD,KAAK,EAAEH,QAAQ,CAACI;MAAK,GAFhBJ,QAAQ,CAACK,GAAG,CAGnB;IAAA,CACL;EAAC,EAGO;AAErB,CAAC;AAED,eAAed,UAAU"},"metadata":{},"sourceType":"module"}